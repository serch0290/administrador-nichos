{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@ngbracket/ngx-layout/core';\nimport { StyleBuilder, BaseDirective2, CoreModule } from '@ngbracket/ngx-layout/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_MAIN$1 = 'start';\nconst DEFAULT_CROSS$1 = 'stretch';\nclass GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input, parent) {\n    return buildCss$2(input || `${DEFAULT_MAIN$1} ${DEFAULT_CROSS$1}`, parent.inline);\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵGridAlignColumnsStyleBuilder_BaseFactory;\n    return function GridAlignColumnsStyleBuilder_Factory(t) {\n      return (ɵGridAlignColumnsStyleBuilder_BaseFactory || (ɵGridAlignColumnsStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridAlignColumnsStyleBuilder)))(t || GridAlignColumnsStyleBuilder);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: GridAlignColumnsStyleBuilder,\n    factory: GridAlignColumnsStyleBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAlignColumnsStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass GridAlignColumnsDirective extends BaseDirective2 {\n  get inline() {\n    return this._inline;\n  }\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-align-columns';\n    this._inline = false;\n    this.init();\n  }\n  // *********************************************\n  // Protected methods\n  // *********************************************\n  updateWithValue(value) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n  static #_ = this.ɵfac = function GridAlignColumnsDirective_Factory(t) {\n    return new (t || GridAlignColumnsDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridAlignColumnsStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: GridAlignColumnsDirective,\n    inputs: {\n      inline: [\"gdInline\", \"inline\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAlignColumnsDirective, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: GridAlignColumnsStyleBuilder\n  }, {\n    type: i1.StyleUtils\n  }, {\n    type: i1.MediaMarshaller\n  }], {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\nconst alignColumnsCache = new Map();\nconst alignColumnsInlineCache = new Map();\nconst inputs$a = ['gdAlignColumns', 'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md', 'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm', 'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl', 'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md', 'gdAlignColumns.gt-lg'];\nconst selector$a = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\nclass DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$a;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵDefaultGridAlignColumnsDirective_BaseFactory;\n    return function DefaultGridAlignColumnsDirective_Factory(t) {\n      return (ɵDefaultGridAlignColumnsDirective_BaseFactory || (ɵDefaultGridAlignColumnsDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridAlignColumnsDirective)))(t || DefaultGridAlignColumnsDirective);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DefaultGridAlignColumnsDirective,\n    selectors: [[\"\", \"gdAlignColumns\", \"\"], [\"\", \"gdAlignColumns.xs\", \"\"], [\"\", \"gdAlignColumns.sm\", \"\"], [\"\", \"gdAlignColumns.md\", \"\"], [\"\", \"gdAlignColumns.lg\", \"\"], [\"\", \"gdAlignColumns.xl\", \"\"], [\"\", \"gdAlignColumns.lt-sm\", \"\"], [\"\", \"gdAlignColumns.lt-md\", \"\"], [\"\", \"gdAlignColumns.lt-lg\", \"\"], [\"\", \"gdAlignColumns.lt-xl\", \"\"], [\"\", \"gdAlignColumns.gt-xs\", \"\"], [\"\", \"gdAlignColumns.gt-sm\", \"\"], [\"\", \"gdAlignColumns.gt-md\", \"\"], [\"\", \"gdAlignColumns.gt-lg\", \"\"]],\n    inputs: {\n      gdAlignColumns: \"gdAlignColumns\",\n      \"gdAlignColumns.xs\": \"gdAlignColumns.xs\",\n      \"gdAlignColumns.sm\": \"gdAlignColumns.sm\",\n      \"gdAlignColumns.md\": \"gdAlignColumns.md\",\n      \"gdAlignColumns.lg\": \"gdAlignColumns.lg\",\n      \"gdAlignColumns.xl\": \"gdAlignColumns.xl\",\n      \"gdAlignColumns.lt-sm\": \"gdAlignColumns.lt-sm\",\n      \"gdAlignColumns.lt-md\": \"gdAlignColumns.lt-md\",\n      \"gdAlignColumns.lt-lg\": \"gdAlignColumns.lt-lg\",\n      \"gdAlignColumns.lt-xl\": \"gdAlignColumns.lt-xl\",\n      \"gdAlignColumns.gt-xs\": \"gdAlignColumns.gt-xs\",\n      \"gdAlignColumns.gt-sm\": \"gdAlignColumns.gt-sm\",\n      \"gdAlignColumns.gt-md\": \"gdAlignColumns.gt-md\",\n      \"gdAlignColumns.gt-lg\": \"gdAlignColumns.gt-lg\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridAlignColumnsDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$a,\n      inputs: inputs$a\n    }]\n  }], null, null);\n})();\nfunction buildCss$2(align, inline) {\n  const css = {},\n    [mainAxis, crossAxis] = align.split(' ');\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      // default main axis\n      css['align-content'] = DEFAULT_MAIN$1;\n      break;\n  }\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default:\n      // 'stretch'\n      // default cross axis\n      css['align-items'] = DEFAULT_CROSS$1;\n      break;\n  }\n  css['display'] = inline ? 'inline-grid' : 'grid';\n  return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\nclass GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input, parent) {\n    return buildCss$1(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵGridAlignRowsStyleBuilder_BaseFactory;\n    return function GridAlignRowsStyleBuilder_Factory(t) {\n      return (ɵGridAlignRowsStyleBuilder_BaseFactory || (ɵGridAlignRowsStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridAlignRowsStyleBuilder)))(t || GridAlignRowsStyleBuilder);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: GridAlignRowsStyleBuilder,\n    factory: GridAlignRowsStyleBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAlignRowsStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass GridAlignRowsDirective extends BaseDirective2 {\n  get inline() {\n    return this._inline;\n  }\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-align-rows';\n    this._inline = false;\n    this.init();\n  }\n  // *********************************************\n  // Protected methods\n  // *********************************************\n  updateWithValue(value) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n  static #_ = this.ɵfac = function GridAlignRowsDirective_Factory(t) {\n    return new (t || GridAlignRowsDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridAlignRowsStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: GridAlignRowsDirective,\n    inputs: {\n      inline: [\"gdInline\", \"inline\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAlignRowsDirective, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: GridAlignRowsStyleBuilder\n  }, {\n    type: i1.StyleUtils\n  }, {\n    type: i1.MediaMarshaller\n  }], {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\nconst alignRowsCache = new Map();\nconst alignRowsInlineCache = new Map();\nconst inputs$9 = ['gdAlignRows', 'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md', 'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm', 'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl', 'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md', 'gdAlignRows.gt-lg'];\nconst selector$9 = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\nclass DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$9;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵDefaultGridAlignRowsDirective_BaseFactory;\n    return function DefaultGridAlignRowsDirective_Factory(t) {\n      return (ɵDefaultGridAlignRowsDirective_BaseFactory || (ɵDefaultGridAlignRowsDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridAlignRowsDirective)))(t || DefaultGridAlignRowsDirective);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DefaultGridAlignRowsDirective,\n    selectors: [[\"\", \"gdAlignRows\", \"\"], [\"\", \"gdAlignRows.xs\", \"\"], [\"\", \"gdAlignRows.sm\", \"\"], [\"\", \"gdAlignRows.md\", \"\"], [\"\", \"gdAlignRows.lg\", \"\"], [\"\", \"gdAlignRows.xl\", \"\"], [\"\", \"gdAlignRows.lt-sm\", \"\"], [\"\", \"gdAlignRows.lt-md\", \"\"], [\"\", \"gdAlignRows.lt-lg\", \"\"], [\"\", \"gdAlignRows.lt-xl\", \"\"], [\"\", \"gdAlignRows.gt-xs\", \"\"], [\"\", \"gdAlignRows.gt-sm\", \"\"], [\"\", \"gdAlignRows.gt-md\", \"\"], [\"\", \"gdAlignRows.gt-lg\", \"\"]],\n    inputs: {\n      gdAlignRows: \"gdAlignRows\",\n      \"gdAlignRows.xs\": \"gdAlignRows.xs\",\n      \"gdAlignRows.sm\": \"gdAlignRows.sm\",\n      \"gdAlignRows.md\": \"gdAlignRows.md\",\n      \"gdAlignRows.lg\": \"gdAlignRows.lg\",\n      \"gdAlignRows.xl\": \"gdAlignRows.xl\",\n      \"gdAlignRows.lt-sm\": \"gdAlignRows.lt-sm\",\n      \"gdAlignRows.lt-md\": \"gdAlignRows.lt-md\",\n      \"gdAlignRows.lt-lg\": \"gdAlignRows.lt-lg\",\n      \"gdAlignRows.lt-xl\": \"gdAlignRows.lt-xl\",\n      \"gdAlignRows.gt-xs\": \"gdAlignRows.gt-xs\",\n      \"gdAlignRows.gt-sm\": \"gdAlignRows.gt-sm\",\n      \"gdAlignRows.gt-md\": \"gdAlignRows.gt-md\",\n      \"gdAlignRows.gt-lg\": \"gdAlignRows.gt-lg\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridAlignRowsDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$9,\n      inputs: inputs$9\n    }]\n  }], null, null);\n})();\nfunction buildCss$1(align, inline) {\n  const css = {},\n    [mainAxis, crossAxis] = align.split(' ');\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      // default main axis\n      css['justify-content'] = DEFAULT_MAIN;\n      break;\n  }\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default:\n      // 'stretch'\n      // default cross axis\n      css['justify-items'] = DEFAULT_CROSS;\n      break;\n  }\n  css['display'] = inline ? 'inline-grid' : 'grid';\n  return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$7 = 'auto';\nclass GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input) {\n    return {\n      'grid-area': input || DEFAULT_VALUE$7\n    };\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵGridAreaStyleBuilder_BaseFactory;\n    return function GridAreaStyleBuilder_Factory(t) {\n      return (ɵGridAreaStyleBuilder_BaseFactory || (ɵGridAreaStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridAreaStyleBuilder)))(t || GridAreaStyleBuilder);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: GridAreaStyleBuilder,\n    factory: GridAreaStyleBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAreaStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass GridAreaDirective extends BaseDirective2 {\n  constructor(elRef, styleUtils, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.DIRECTIVE_KEY = 'grid-area';\n    this.styleCache = gridAreaCache;\n    this.init();\n  }\n  static #_ = this.ɵfac = function GridAreaDirective_Factory(t) {\n    return new (t || GridAreaDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(GridAreaStyleBuilder), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: GridAreaDirective,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAreaDirective, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.StyleUtils\n  }, {\n    type: GridAreaStyleBuilder\n  }, {\n    type: i1.MediaMarshaller\n  }], null);\n})();\nconst gridAreaCache = new Map();\nconst inputs$8 = ['gdArea', 'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl', 'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl', 'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'];\nconst selector$8 = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\nclass DefaultGridAreaDirective extends GridAreaDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$8;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵDefaultGridAreaDirective_BaseFactory;\n    return function DefaultGridAreaDirective_Factory(t) {\n      return (ɵDefaultGridAreaDirective_BaseFactory || (ɵDefaultGridAreaDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridAreaDirective)))(t || DefaultGridAreaDirective);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DefaultGridAreaDirective,\n    selectors: [[\"\", \"gdArea\", \"\"], [\"\", \"gdArea.xs\", \"\"], [\"\", \"gdArea.sm\", \"\"], [\"\", \"gdArea.md\", \"\"], [\"\", \"gdArea.lg\", \"\"], [\"\", \"gdArea.xl\", \"\"], [\"\", \"gdArea.lt-sm\", \"\"], [\"\", \"gdArea.lt-md\", \"\"], [\"\", \"gdArea.lt-lg\", \"\"], [\"\", \"gdArea.lt-xl\", \"\"], [\"\", \"gdArea.gt-xs\", \"\"], [\"\", \"gdArea.gt-sm\", \"\"], [\"\", \"gdArea.gt-md\", \"\"], [\"\", \"gdArea.gt-lg\", \"\"]],\n    inputs: {\n      gdArea: \"gdArea\",\n      \"gdArea.xs\": \"gdArea.xs\",\n      \"gdArea.sm\": \"gdArea.sm\",\n      \"gdArea.md\": \"gdArea.md\",\n      \"gdArea.lg\": \"gdArea.lg\",\n      \"gdArea.xl\": \"gdArea.xl\",\n      \"gdArea.lt-sm\": \"gdArea.lt-sm\",\n      \"gdArea.lt-md\": \"gdArea.lt-md\",\n      \"gdArea.lt-lg\": \"gdArea.lt-lg\",\n      \"gdArea.lt-xl\": \"gdArea.lt-xl\",\n      \"gdArea.gt-xs\": \"gdArea.gt-xs\",\n      \"gdArea.gt-sm\": \"gdArea.gt-sm\",\n      \"gdArea.gt-md\": \"gdArea.gt-md\",\n      \"gdArea.gt-lg\": \"gdArea.gt-lg\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridAreaDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$8,\n      inputs: inputs$8\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$6 = 'none';\nconst DELIMETER = '|';\nclass GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input, parent) {\n    const areas = (input || DEFAULT_VALUE$6).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n    return {\n      display: parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵGridAreasStyleBuiler_BaseFactory;\n    return function GridAreasStyleBuiler_Factory(t) {\n      return (ɵGridAreasStyleBuiler_BaseFactory || (ɵGridAreasStyleBuiler_BaseFactory = i0.ɵɵgetInheritedFactory(GridAreasStyleBuiler)))(t || GridAreasStyleBuiler);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: GridAreasStyleBuiler,\n    factory: GridAreasStyleBuiler.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAreasStyleBuiler, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass GridAreasDirective extends BaseDirective2 {\n  get inline() {\n    return this._inline;\n  }\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  constructor(elRef, styleUtils, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.DIRECTIVE_KEY = 'grid-areas';\n    this._inline = false;\n    this.init();\n  }\n  // *********************************************\n  // Protected methods\n  // *********************************************\n  updateWithValue(value) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n  static #_ = this.ɵfac = function GridAreasDirective_Factory(t) {\n    return new (t || GridAreasDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(GridAreasStyleBuiler), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: GridAreasDirective,\n    inputs: {\n      inline: [\"gdInline\", \"inline\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAreasDirective, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.StyleUtils\n  }, {\n    type: GridAreasStyleBuiler\n  }, {\n    type: i1.MediaMarshaller\n  }], {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\nconst areasCache = new Map();\nconst areasInlineCache = new Map();\nconst inputs$7 = ['gdAreas', 'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl', 'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl', 'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'];\nconst selector$7 = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\nclass DefaultGridAreasDirective extends GridAreasDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$7;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵDefaultGridAreasDirective_BaseFactory;\n    return function DefaultGridAreasDirective_Factory(t) {\n      return (ɵDefaultGridAreasDirective_BaseFactory || (ɵDefaultGridAreasDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridAreasDirective)))(t || DefaultGridAreasDirective);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DefaultGridAreasDirective,\n    selectors: [[\"\", \"gdAreas\", \"\"], [\"\", \"gdAreas.xs\", \"\"], [\"\", \"gdAreas.sm\", \"\"], [\"\", \"gdAreas.md\", \"\"], [\"\", \"gdAreas.lg\", \"\"], [\"\", \"gdAreas.xl\", \"\"], [\"\", \"gdAreas.lt-sm\", \"\"], [\"\", \"gdAreas.lt-md\", \"\"], [\"\", \"gdAreas.lt-lg\", \"\"], [\"\", \"gdAreas.lt-xl\", \"\"], [\"\", \"gdAreas.gt-xs\", \"\"], [\"\", \"gdAreas.gt-sm\", \"\"], [\"\", \"gdAreas.gt-md\", \"\"], [\"\", \"gdAreas.gt-lg\", \"\"]],\n    inputs: {\n      gdAreas: \"gdAreas\",\n      \"gdAreas.xs\": \"gdAreas.xs\",\n      \"gdAreas.sm\": \"gdAreas.sm\",\n      \"gdAreas.md\": \"gdAreas.md\",\n      \"gdAreas.lg\": \"gdAreas.lg\",\n      \"gdAreas.xl\": \"gdAreas.xl\",\n      \"gdAreas.lt-sm\": \"gdAreas.lt-sm\",\n      \"gdAreas.lt-md\": \"gdAreas.lt-md\",\n      \"gdAreas.lt-lg\": \"gdAreas.lt-lg\",\n      \"gdAreas.lt-xl\": \"gdAreas.lt-xl\",\n      \"gdAreas.gt-xs\": \"gdAreas.gt-xs\",\n      \"gdAreas.gt-sm\": \"gdAreas.gt-sm\",\n      \"gdAreas.gt-md\": \"gdAreas.gt-md\",\n      \"gdAreas.gt-lg\": \"gdAreas.gt-lg\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridAreasDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$7,\n      inputs: inputs$7\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$5 = 'initial';\nclass GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input, parent) {\n    let [direction, dense] = (input || DEFAULT_VALUE$5).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n    dense = dense === 'dense' && direction !== 'dense' ? ' dense' : '';\n    return {\n      display: parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵGridAutoStyleBuilder_BaseFactory;\n    return function GridAutoStyleBuilder_Factory(t) {\n      return (ɵGridAutoStyleBuilder_BaseFactory || (ɵGridAutoStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridAutoStyleBuilder)))(t || GridAutoStyleBuilder);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: GridAutoStyleBuilder,\n    factory: GridAutoStyleBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAutoStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass GridAutoDirective extends BaseDirective2 {\n  get inline() {\n    return this._inline;\n  }\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this._inline = false;\n    this.DIRECTIVE_KEY = 'grid-auto';\n    this.init();\n  }\n  // *********************************************\n  // Protected methods\n  // *********************************************\n  updateWithValue(value) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n  static #_ = this.ɵfac = function GridAutoDirective_Factory(t) {\n    return new (t || GridAutoDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridAutoStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: GridAutoDirective,\n    inputs: {\n      inline: [\"gdInline\", \"inline\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAutoDirective, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: GridAutoStyleBuilder\n  }, {\n    type: i1.StyleUtils\n  }, {\n    type: i1.MediaMarshaller\n  }], {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\nconst autoCache = new Map();\nconst autoInlineCache = new Map();\nconst inputs$6 = ['gdAuto', 'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl', 'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl', 'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'];\nconst selector$6 = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\nclass DefaultGridAutoDirective extends GridAutoDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$6;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵDefaultGridAutoDirective_BaseFactory;\n    return function DefaultGridAutoDirective_Factory(t) {\n      return (ɵDefaultGridAutoDirective_BaseFactory || (ɵDefaultGridAutoDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridAutoDirective)))(t || DefaultGridAutoDirective);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DefaultGridAutoDirective,\n    selectors: [[\"\", \"gdAuto\", \"\"], [\"\", \"gdAuto.xs\", \"\"], [\"\", \"gdAuto.sm\", \"\"], [\"\", \"gdAuto.md\", \"\"], [\"\", \"gdAuto.lg\", \"\"], [\"\", \"gdAuto.xl\", \"\"], [\"\", \"gdAuto.lt-sm\", \"\"], [\"\", \"gdAuto.lt-md\", \"\"], [\"\", \"gdAuto.lt-lg\", \"\"], [\"\", \"gdAuto.lt-xl\", \"\"], [\"\", \"gdAuto.gt-xs\", \"\"], [\"\", \"gdAuto.gt-sm\", \"\"], [\"\", \"gdAuto.gt-md\", \"\"], [\"\", \"gdAuto.gt-lg\", \"\"]],\n    inputs: {\n      gdAuto: \"gdAuto\",\n      \"gdAuto.xs\": \"gdAuto.xs\",\n      \"gdAuto.sm\": \"gdAuto.sm\",\n      \"gdAuto.md\": \"gdAuto.md\",\n      \"gdAuto.lg\": \"gdAuto.lg\",\n      \"gdAuto.xl\": \"gdAuto.xl\",\n      \"gdAuto.lt-sm\": \"gdAuto.lt-sm\",\n      \"gdAuto.lt-md\": \"gdAuto.lt-md\",\n      \"gdAuto.lt-lg\": \"gdAuto.lt-lg\",\n      \"gdAuto.lt-xl\": \"gdAuto.lt-xl\",\n      \"gdAuto.gt-xs\": \"gdAuto.gt-xs\",\n      \"gdAuto.gt-sm\": \"gdAuto.gt-sm\",\n      \"gdAuto.gt-md\": \"gdAuto.gt-md\",\n      \"gdAuto.gt-lg\": \"gdAuto.gt-lg\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridAutoDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$6,\n      inputs: inputs$6\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$4 = 'auto';\nclass GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input) {\n    return {\n      'grid-column': input || DEFAULT_VALUE$4\n    };\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵGridColumnStyleBuilder_BaseFactory;\n    return function GridColumnStyleBuilder_Factory(t) {\n      return (ɵGridColumnStyleBuilder_BaseFactory || (ɵGridColumnStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridColumnStyleBuilder)))(t || GridColumnStyleBuilder);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: GridColumnStyleBuilder,\n    factory: GridColumnStyleBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridColumnStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass GridColumnDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-column';\n    this.styleCache = columnCache;\n    this.init();\n  }\n  static #_ = this.ɵfac = function GridColumnDirective_Factory(t) {\n    return new (t || GridColumnDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridColumnStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: GridColumnDirective,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridColumnDirective, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: GridColumnStyleBuilder\n  }, {\n    type: i1.StyleUtils\n  }, {\n    type: i1.MediaMarshaller\n  }], null);\n})();\nconst columnCache = new Map();\nconst inputs$5 = ['gdColumn', 'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl', 'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl', 'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'];\nconst selector$5 = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\nclass DefaultGridColumnDirective extends GridColumnDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$5;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵDefaultGridColumnDirective_BaseFactory;\n    return function DefaultGridColumnDirective_Factory(t) {\n      return (ɵDefaultGridColumnDirective_BaseFactory || (ɵDefaultGridColumnDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridColumnDirective)))(t || DefaultGridColumnDirective);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DefaultGridColumnDirective,\n    selectors: [[\"\", \"gdColumn\", \"\"], [\"\", \"gdColumn.xs\", \"\"], [\"\", \"gdColumn.sm\", \"\"], [\"\", \"gdColumn.md\", \"\"], [\"\", \"gdColumn.lg\", \"\"], [\"\", \"gdColumn.xl\", \"\"], [\"\", \"gdColumn.lt-sm\", \"\"], [\"\", \"gdColumn.lt-md\", \"\"], [\"\", \"gdColumn.lt-lg\", \"\"], [\"\", \"gdColumn.lt-xl\", \"\"], [\"\", \"gdColumn.gt-xs\", \"\"], [\"\", \"gdColumn.gt-sm\", \"\"], [\"\", \"gdColumn.gt-md\", \"\"], [\"\", \"gdColumn.gt-lg\", \"\"]],\n    inputs: {\n      gdColumn: \"gdColumn\",\n      \"gdColumn.xs\": \"gdColumn.xs\",\n      \"gdColumn.sm\": \"gdColumn.sm\",\n      \"gdColumn.md\": \"gdColumn.md\",\n      \"gdColumn.lg\": \"gdColumn.lg\",\n      \"gdColumn.xl\": \"gdColumn.xl\",\n      \"gdColumn.lt-sm\": \"gdColumn.lt-sm\",\n      \"gdColumn.lt-md\": \"gdColumn.lt-md\",\n      \"gdColumn.lt-lg\": \"gdColumn.lt-lg\",\n      \"gdColumn.lt-xl\": \"gdColumn.lt-xl\",\n      \"gdColumn.gt-xs\": \"gdColumn.gt-xs\",\n      \"gdColumn.gt-sm\": \"gdColumn.gt-sm\",\n      \"gdColumn.gt-md\": \"gdColumn.gt-md\",\n      \"gdColumn.gt-lg\": \"gdColumn.gt-lg\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridColumnDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$5,\n      inputs: inputs$5\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$3 = 'none';\nconst AUTO_SPECIFIER$1 = '!';\nclass GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input, parent) {\n    input = input || DEFAULT_VALUE$3;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER$1)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER$1));\n      auto = true;\n    }\n    const css = {\n      display: parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': ''\n    };\n    const key = auto ? 'grid-auto-columns' : 'grid-template-columns';\n    css[key] = input;\n    return css;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵGridColumnsStyleBuilder_BaseFactory;\n    return function GridColumnsStyleBuilder_Factory(t) {\n      return (ɵGridColumnsStyleBuilder_BaseFactory || (ɵGridColumnsStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridColumnsStyleBuilder)))(t || GridColumnsStyleBuilder);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: GridColumnsStyleBuilder,\n    factory: GridColumnsStyleBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridColumnsStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass GridColumnsDirective extends BaseDirective2 {\n  get inline() {\n    return this._inline;\n  }\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-columns';\n    this._inline = false;\n    this.init();\n  }\n  // *********************************************\n  // Protected methods\n  // *********************************************\n  updateWithValue(value) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n  static #_ = this.ɵfac = function GridColumnsDirective_Factory(t) {\n    return new (t || GridColumnsDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridColumnsStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: GridColumnsDirective,\n    inputs: {\n      inline: [\"gdInline\", \"inline\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridColumnsDirective, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: GridColumnsStyleBuilder\n  }, {\n    type: i1.StyleUtils\n  }, {\n    type: i1.MediaMarshaller\n  }], {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\nconst columnsCache = new Map();\nconst columnsInlineCache = new Map();\nconst inputs$4 = ['gdColumns', 'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl', 'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl', 'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'];\nconst selector$4 = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\nclass DefaultGridColumnsDirective extends GridColumnsDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$4;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵDefaultGridColumnsDirective_BaseFactory;\n    return function DefaultGridColumnsDirective_Factory(t) {\n      return (ɵDefaultGridColumnsDirective_BaseFactory || (ɵDefaultGridColumnsDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridColumnsDirective)))(t || DefaultGridColumnsDirective);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DefaultGridColumnsDirective,\n    selectors: [[\"\", \"gdColumns\", \"\"], [\"\", \"gdColumns.xs\", \"\"], [\"\", \"gdColumns.sm\", \"\"], [\"\", \"gdColumns.md\", \"\"], [\"\", \"gdColumns.lg\", \"\"], [\"\", \"gdColumns.xl\", \"\"], [\"\", \"gdColumns.lt-sm\", \"\"], [\"\", \"gdColumns.lt-md\", \"\"], [\"\", \"gdColumns.lt-lg\", \"\"], [\"\", \"gdColumns.lt-xl\", \"\"], [\"\", \"gdColumns.gt-xs\", \"\"], [\"\", \"gdColumns.gt-sm\", \"\"], [\"\", \"gdColumns.gt-md\", \"\"], [\"\", \"gdColumns.gt-lg\", \"\"]],\n    inputs: {\n      gdColumns: \"gdColumns\",\n      \"gdColumns.xs\": \"gdColumns.xs\",\n      \"gdColumns.sm\": \"gdColumns.sm\",\n      \"gdColumns.md\": \"gdColumns.md\",\n      \"gdColumns.lg\": \"gdColumns.lg\",\n      \"gdColumns.xl\": \"gdColumns.xl\",\n      \"gdColumns.lt-sm\": \"gdColumns.lt-sm\",\n      \"gdColumns.lt-md\": \"gdColumns.lt-md\",\n      \"gdColumns.lt-lg\": \"gdColumns.lt-lg\",\n      \"gdColumns.lt-xl\": \"gdColumns.lt-xl\",\n      \"gdColumns.gt-xs\": \"gdColumns.gt-xs\",\n      \"gdColumns.gt-sm\": \"gdColumns.gt-sm\",\n      \"gdColumns.gt-md\": \"gdColumns.gt-md\",\n      \"gdColumns.gt-lg\": \"gdColumns.gt-lg\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridColumnsDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$4,\n      inputs: inputs$4\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$2 = '0';\nclass GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input, parent) {\n    return {\n      display: parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE$2\n    };\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵGridGapStyleBuilder_BaseFactory;\n    return function GridGapStyleBuilder_Factory(t) {\n      return (ɵGridGapStyleBuilder_BaseFactory || (ɵGridGapStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridGapStyleBuilder)))(t || GridGapStyleBuilder);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: GridGapStyleBuilder,\n    factory: GridGapStyleBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridGapStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass GridGapDirective extends BaseDirective2 {\n  get inline() {\n    return this._inline;\n  }\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  constructor(elRef, styleUtils, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.DIRECTIVE_KEY = 'grid-gap';\n    this._inline = false;\n    this.init();\n  }\n  // *********************************************\n  // Protected methods\n  // *********************************************\n  updateWithValue(value) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n  static #_ = this.ɵfac = function GridGapDirective_Factory(t) {\n    return new (t || GridGapDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(GridGapStyleBuilder), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: GridGapDirective,\n    inputs: {\n      inline: [\"gdInline\", \"inline\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridGapDirective, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.StyleUtils\n  }, {\n    type: GridGapStyleBuilder\n  }, {\n    type: i1.MediaMarshaller\n  }], {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\nconst gapCache = new Map();\nconst gapInlineCache = new Map();\nconst inputs$3 = ['gdGap', 'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl', 'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl', 'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'];\nconst selector$3 = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\nclass DefaultGridGapDirective extends GridGapDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$3;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵDefaultGridGapDirective_BaseFactory;\n    return function DefaultGridGapDirective_Factory(t) {\n      return (ɵDefaultGridGapDirective_BaseFactory || (ɵDefaultGridGapDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridGapDirective)))(t || DefaultGridGapDirective);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DefaultGridGapDirective,\n    selectors: [[\"\", \"gdGap\", \"\"], [\"\", \"gdGap.xs\", \"\"], [\"\", \"gdGap.sm\", \"\"], [\"\", \"gdGap.md\", \"\"], [\"\", \"gdGap.lg\", \"\"], [\"\", \"gdGap.xl\", \"\"], [\"\", \"gdGap.lt-sm\", \"\"], [\"\", \"gdGap.lt-md\", \"\"], [\"\", \"gdGap.lt-lg\", \"\"], [\"\", \"gdGap.lt-xl\", \"\"], [\"\", \"gdGap.gt-xs\", \"\"], [\"\", \"gdGap.gt-sm\", \"\"], [\"\", \"gdGap.gt-md\", \"\"], [\"\", \"gdGap.gt-lg\", \"\"]],\n    inputs: {\n      gdGap: \"gdGap\",\n      \"gdGap.xs\": \"gdGap.xs\",\n      \"gdGap.sm\": \"gdGap.sm\",\n      \"gdGap.md\": \"gdGap.md\",\n      \"gdGap.lg\": \"gdGap.lg\",\n      \"gdGap.xl\": \"gdGap.xl\",\n      \"gdGap.lt-sm\": \"gdGap.lt-sm\",\n      \"gdGap.lt-md\": \"gdGap.lt-md\",\n      \"gdGap.lt-lg\": \"gdGap.lt-lg\",\n      \"gdGap.lt-xl\": \"gdGap.lt-xl\",\n      \"gdGap.gt-xs\": \"gdGap.gt-xs\",\n      \"gdGap.gt-sm\": \"gdGap.gt-sm\",\n      \"gdGap.gt-md\": \"gdGap.gt-md\",\n      \"gdGap.gt-lg\": \"gdGap.gt-lg\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridGapDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$3,\n      inputs: inputs$3\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\nclass GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵGridAlignStyleBuilder_BaseFactory;\n    return function GridAlignStyleBuilder_Factory(t) {\n      return (ɵGridAlignStyleBuilder_BaseFactory || (ɵGridAlignStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridAlignStyleBuilder)))(t || GridAlignStyleBuilder);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: GridAlignStyleBuilder,\n    factory: GridAlignStyleBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAlignStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass GridAlignDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-align';\n    this.styleCache = alignCache;\n    this.init();\n  }\n  static #_ = this.ɵfac = function GridAlignDirective_Factory(t) {\n    return new (t || GridAlignDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridAlignStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: GridAlignDirective,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAlignDirective, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: GridAlignStyleBuilder\n  }, {\n    type: i1.StyleUtils\n  }, {\n    type: i1.MediaMarshaller\n  }], null);\n})();\nconst alignCache = new Map();\nconst inputs$2 = ['gdGridAlign', 'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl', 'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl', 'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'];\nconst selector$2 = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\nclass DefaultGridAlignDirective extends GridAlignDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$2;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵDefaultGridAlignDirective_BaseFactory;\n    return function DefaultGridAlignDirective_Factory(t) {\n      return (ɵDefaultGridAlignDirective_BaseFactory || (ɵDefaultGridAlignDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridAlignDirective)))(t || DefaultGridAlignDirective);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DefaultGridAlignDirective,\n    selectors: [[\"\", \"gdGridAlign\", \"\"], [\"\", \"gdGridAlign.xs\", \"\"], [\"\", \"gdGridAlign.sm\", \"\"], [\"\", \"gdGridAlign.md\", \"\"], [\"\", \"gdGridAlign.lg\", \"\"], [\"\", \"gdGridAlign.xl\", \"\"], [\"\", \"gdGridAlign.lt-sm\", \"\"], [\"\", \"gdGridAlign.lt-md\", \"\"], [\"\", \"gdGridAlign.lt-lg\", \"\"], [\"\", \"gdGridAlign.lt-xl\", \"\"], [\"\", \"gdGridAlign.gt-xs\", \"\"], [\"\", \"gdGridAlign.gt-sm\", \"\"], [\"\", \"gdGridAlign.gt-md\", \"\"], [\"\", \"gdGridAlign.gt-lg\", \"\"]],\n    inputs: {\n      gdGridAlign: \"gdGridAlign\",\n      \"gdGridAlign.xs\": \"gdGridAlign.xs\",\n      \"gdGridAlign.sm\": \"gdGridAlign.sm\",\n      \"gdGridAlign.md\": \"gdGridAlign.md\",\n      \"gdGridAlign.lg\": \"gdGridAlign.lg\",\n      \"gdGridAlign.xl\": \"gdGridAlign.xl\",\n      \"gdGridAlign.lt-sm\": \"gdGridAlign.lt-sm\",\n      \"gdGridAlign.lt-md\": \"gdGridAlign.lt-md\",\n      \"gdGridAlign.lt-lg\": \"gdGridAlign.lt-lg\",\n      \"gdGridAlign.lt-xl\": \"gdGridAlign.lt-xl\",\n      \"gdGridAlign.gt-xs\": \"gdGridAlign.gt-xs\",\n      \"gdGridAlign.gt-sm\": \"gdGridAlign.gt-sm\",\n      \"gdGridAlign.gt-md\": \"gdGridAlign.gt-md\",\n      \"gdGridAlign.gt-lg\": \"gdGridAlign.gt-lg\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridAlignDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$2,\n      inputs: inputs$2\n    }]\n  }], null, null);\n})();\nfunction buildCss(align = '') {\n  const css = {},\n    [rowAxis, columnAxis] = align.split(' ');\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      // default row axis\n      css['justify-self'] = ROW_DEFAULT;\n      break;\n  }\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      // default column axis\n      css['align-self'] = COL_DEFAULT;\n      break;\n  }\n  return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$1 = 'auto';\nclass GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input) {\n    return {\n      'grid-row': input || DEFAULT_VALUE$1\n    };\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵGridRowStyleBuilder_BaseFactory;\n    return function GridRowStyleBuilder_Factory(t) {\n      return (ɵGridRowStyleBuilder_BaseFactory || (ɵGridRowStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridRowStyleBuilder)))(t || GridRowStyleBuilder);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: GridRowStyleBuilder,\n    factory: GridRowStyleBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridRowStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass GridRowDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-row';\n    this.styleCache = rowCache;\n    this.init();\n  }\n  static #_ = this.ɵfac = function GridRowDirective_Factory(t) {\n    return new (t || GridRowDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridRowStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: GridRowDirective,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridRowDirective, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: GridRowStyleBuilder\n  }, {\n    type: i1.StyleUtils\n  }, {\n    type: i1.MediaMarshaller\n  }], null);\n})();\nconst rowCache = new Map();\nconst inputs$1 = ['gdRow', 'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl', 'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl', 'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'];\nconst selector$1 = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\nclass DefaultGridRowDirective extends GridRowDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$1;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵDefaultGridRowDirective_BaseFactory;\n    return function DefaultGridRowDirective_Factory(t) {\n      return (ɵDefaultGridRowDirective_BaseFactory || (ɵDefaultGridRowDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridRowDirective)))(t || DefaultGridRowDirective);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DefaultGridRowDirective,\n    selectors: [[\"\", \"gdRow\", \"\"], [\"\", \"gdRow.xs\", \"\"], [\"\", \"gdRow.sm\", \"\"], [\"\", \"gdRow.md\", \"\"], [\"\", \"gdRow.lg\", \"\"], [\"\", \"gdRow.xl\", \"\"], [\"\", \"gdRow.lt-sm\", \"\"], [\"\", \"gdRow.lt-md\", \"\"], [\"\", \"gdRow.lt-lg\", \"\"], [\"\", \"gdRow.lt-xl\", \"\"], [\"\", \"gdRow.gt-xs\", \"\"], [\"\", \"gdRow.gt-sm\", \"\"], [\"\", \"gdRow.gt-md\", \"\"], [\"\", \"gdRow.gt-lg\", \"\"]],\n    inputs: {\n      gdRow: \"gdRow\",\n      \"gdRow.xs\": \"gdRow.xs\",\n      \"gdRow.sm\": \"gdRow.sm\",\n      \"gdRow.md\": \"gdRow.md\",\n      \"gdRow.lg\": \"gdRow.lg\",\n      \"gdRow.xl\": \"gdRow.xl\",\n      \"gdRow.lt-sm\": \"gdRow.lt-sm\",\n      \"gdRow.lt-md\": \"gdRow.lt-md\",\n      \"gdRow.lt-lg\": \"gdRow.lt-lg\",\n      \"gdRow.lt-xl\": \"gdRow.lt-xl\",\n      \"gdRow.gt-xs\": \"gdRow.gt-xs\",\n      \"gdRow.gt-sm\": \"gdRow.gt-sm\",\n      \"gdRow.gt-md\": \"gdRow.gt-md\",\n      \"gdRow.gt-lg\": \"gdRow.gt-lg\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridRowDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$1,\n      inputs: inputs$1\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\nclass GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input, parent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n    const css = {\n      display: parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': ''\n    };\n    const key = auto ? 'grid-auto-rows' : 'grid-template-rows';\n    css[key] = input;\n    return css;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵGridRowsStyleBuilder_BaseFactory;\n    return function GridRowsStyleBuilder_Factory(t) {\n      return (ɵGridRowsStyleBuilder_BaseFactory || (ɵGridRowsStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridRowsStyleBuilder)))(t || GridRowsStyleBuilder);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: GridRowsStyleBuilder,\n    factory: GridRowsStyleBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridRowsStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass GridRowsDirective extends BaseDirective2 {\n  get inline() {\n    return this._inline;\n  }\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  }\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-rows';\n    this._inline = false;\n    this.init();\n  }\n  // *********************************************\n  // Protected methods\n  // *********************************************\n  updateWithValue(value) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n  static #_ = this.ɵfac = function GridRowsDirective_Factory(t) {\n    return new (t || GridRowsDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridRowsStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: GridRowsDirective,\n    inputs: {\n      inline: [\"gdInline\", \"inline\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridRowsDirective, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: GridRowsStyleBuilder\n  }, {\n    type: i1.StyleUtils\n  }, {\n    type: i1.MediaMarshaller\n  }], {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\nconst rowsCache = new Map();\nconst rowsInlineCache = new Map();\nconst inputs = ['gdRows', 'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl', 'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl', 'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'];\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\nclass DefaultGridRowsDirective extends GridRowsDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵDefaultGridRowsDirective_BaseFactory;\n    return function DefaultGridRowsDirective_Factory(t) {\n      return (ɵDefaultGridRowsDirective_BaseFactory || (ɵDefaultGridRowsDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridRowsDirective)))(t || DefaultGridRowsDirective);\n    };\n  }();\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DefaultGridRowsDirective,\n    selectors: [[\"\", \"gdRows\", \"\"], [\"\", \"gdRows.xs\", \"\"], [\"\", \"gdRows.sm\", \"\"], [\"\", \"gdRows.md\", \"\"], [\"\", \"gdRows.lg\", \"\"], [\"\", \"gdRows.xl\", \"\"], [\"\", \"gdRows.lt-sm\", \"\"], [\"\", \"gdRows.lt-md\", \"\"], [\"\", \"gdRows.lt-lg\", \"\"], [\"\", \"gdRows.lt-xl\", \"\"], [\"\", \"gdRows.gt-xs\", \"\"], [\"\", \"gdRows.gt-sm\", \"\"], [\"\", \"gdRows.gt-md\", \"\"], [\"\", \"gdRows.gt-lg\", \"\"]],\n    inputs: {\n      gdRows: \"gdRows\",\n      \"gdRows.xs\": \"gdRows.xs\",\n      \"gdRows.sm\": \"gdRows.sm\",\n      \"gdRows.md\": \"gdRows.md\",\n      \"gdRows.lg\": \"gdRows.lg\",\n      \"gdRows.xl\": \"gdRows.xl\",\n      \"gdRows.lt-sm\": \"gdRows.lt-sm\",\n      \"gdRows.lt-md\": \"gdRows.lt-md\",\n      \"gdRows.lt-lg\": \"gdRows.lt-lg\",\n      \"gdRows.lt-xl\": \"gdRows.lt-xl\",\n      \"gdRows.gt-xs\": \"gdRows.gt-xs\",\n      \"gdRows.gt-sm\": \"gdRows.gt-sm\",\n      \"gdRows.gt-md\": \"gdRows.gt-md\",\n      \"gdRows.gt-lg\": \"gdRows.gt-lg\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridRowsDirective, [{\n    type: Directive,\n    args: [{\n      selector,\n      inputs\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [DefaultGridAlignDirective, DefaultGridAlignColumnsDirective, DefaultGridAlignRowsDirective, DefaultGridAreaDirective, DefaultGridAreasDirective, DefaultGridAutoDirective, DefaultGridColumnDirective, DefaultGridColumnsDirective, DefaultGridGapDirective, DefaultGridRowDirective, DefaultGridRowsDirective];\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\nclass GridModule {\n  static #_ = this.ɵfac = function GridModule_Factory(t) {\n    return new (t || GridModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: GridModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CoreModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CoreModule],\n      declarations: [...ALL_DIRECTIVES],\n      exports: [...ALL_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DefaultGridAlignColumnsDirective, DefaultGridAlignDirective, DefaultGridAlignRowsDirective, DefaultGridAreaDirective, DefaultGridAreasDirective, DefaultGridAutoDirective, DefaultGridColumnDirective, DefaultGridColumnsDirective, DefaultGridGapDirective, DefaultGridRowDirective, DefaultGridRowsDirective, GridAlignColumnsDirective, GridAlignColumnsStyleBuilder, GridAlignDirective, GridAlignRowsDirective, GridAlignRowsStyleBuilder, GridAlignStyleBuilder, GridAreaDirective, GridAreaStyleBuilder, GridAreasDirective, GridAreasStyleBuiler, GridAutoDirective, GridAutoStyleBuilder, GridColumnDirective, GridColumnStyleBuilder, GridColumnsDirective, GridColumnsStyleBuilder, GridGapDirective, GridGapStyleBuilder, GridModule, GridRowDirective, GridRowStyleBuilder, GridRowsDirective, GridRowsStyleBuilder };","map":{"version":3,"names":["i0","Injectable","Directive","Input","NgModule","i1","StyleBuilder","BaseDirective2","CoreModule","coerceBooleanProperty","DEFAULT_MAIN$1","DEFAULT_CROSS$1","GridAlignColumnsStyleBuilder","buildStyles","input","parent","buildCss$2","inline","_","ɵfac","ɵGridAlignColumnsStyleBuilder_BaseFactory","GridAlignColumnsStyleBuilder_Factory","t","ɵɵgetInheritedFactory","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","GridAlignColumnsDirective","_inline","val","constructor","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","init","updateWithValue","value","styleCache","alignColumnsInlineCache","alignColumnsCache","addStyles","GridAlignColumnsDirective_Factory","ɵɵdirectiveInject","ElementRef","StyleUtils","MediaMarshaller","ɵdir","ɵɵdefineDirective","inputs","features","ɵɵInheritDefinitionFeature","Map","inputs$a","selector$a","DefaultGridAlignColumnsDirective","arguments","ɵDefaultGridAlignColumnsDirective_BaseFactory","DefaultGridAlignColumnsDirective_Factory","selectors","gdAlignColumns","selector","align","css","mainAxis","crossAxis","split","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignRowsStyleBuilder","buildCss$1","ɵGridAlignRowsStyleBuilder_BaseFactory","GridAlignRowsStyleBuilder_Factory","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","GridAlignRowsDirective_Factory","inputs$9","selector$9","DefaultGridAlignRowsDirective","ɵDefaultGridAlignRowsDirective_BaseFactory","DefaultGridAlignRowsDirective_Factory","gdAlignRows","DEFAULT_VALUE$7","GridAreaStyleBuilder","ɵGridAreaStyleBuilder_BaseFactory","GridAreaStyleBuilder_Factory","GridAreaDirective","elRef","styleUtils","gridAreaCache","GridAreaDirective_Factory","inputs$8","selector$8","DefaultGridAreaDirective","ɵDefaultGridAreaDirective_BaseFactory","DefaultGridAreaDirective_Factory","gdArea","DEFAULT_VALUE$6","DELIMETER","GridAreasStyleBuiler","areas","map","v","trim","display","join","ɵGridAreasStyleBuiler_BaseFactory","GridAreasStyleBuiler_Factory","GridAreasDirective","areasInlineCache","areasCache","GridAreasDirective_Factory","inputs$7","selector$7","DefaultGridAreasDirective","ɵDefaultGridAreasDirective_BaseFactory","DefaultGridAreasDirective_Factory","gdAreas","DEFAULT_VALUE$5","GridAutoStyleBuilder","direction","dense","ɵGridAutoStyleBuilder_BaseFactory","GridAutoStyleBuilder_Factory","GridAutoDirective","autoInlineCache","autoCache","GridAutoDirective_Factory","inputs$6","selector$6","DefaultGridAutoDirective","ɵDefaultGridAutoDirective_BaseFactory","DefaultGridAutoDirective_Factory","gdAuto","DEFAULT_VALUE$4","GridColumnStyleBuilder","ɵGridColumnStyleBuilder_BaseFactory","GridColumnStyleBuilder_Factory","GridColumnDirective","columnCache","GridColumnDirective_Factory","inputs$5","selector$5","DefaultGridColumnDirective","ɵDefaultGridColumnDirective_BaseFactory","DefaultGridColumnDirective_Factory","gdColumn","DEFAULT_VALUE$3","AUTO_SPECIFIER$1","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","key","ɵGridColumnsStyleBuilder_BaseFactory","GridColumnsStyleBuilder_Factory","GridColumnsDirective","columnsInlineCache","columnsCache","GridColumnsDirective_Factory","inputs$4","selector$4","DefaultGridColumnsDirective","ɵDefaultGridColumnsDirective_BaseFactory","DefaultGridColumnsDirective_Factory","gdColumns","DEFAULT_VALUE$2","GridGapStyleBuilder","ɵGridGapStyleBuilder_BaseFactory","GridGapStyleBuilder_Factory","GridGapDirective","gapInlineCache","gapCache","GridGapDirective_Factory","inputs$3","selector$3","DefaultGridGapDirective","ɵDefaultGridGapDirective_BaseFactory","DefaultGridGapDirective_Factory","gdGap","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","buildCss","ɵGridAlignStyleBuilder_BaseFactory","GridAlignStyleBuilder_Factory","GridAlignDirective","alignCache","GridAlignDirective_Factory","inputs$2","selector$2","DefaultGridAlignDirective","ɵDefaultGridAlignDirective_BaseFactory","DefaultGridAlignDirective_Factory","gdGridAlign","rowAxis","columnAxis","DEFAULT_VALUE$1","GridRowStyleBuilder","ɵGridRowStyleBuilder_BaseFactory","GridRowStyleBuilder_Factory","GridRowDirective","rowCache","GridRowDirective_Factory","inputs$1","selector$1","DefaultGridRowDirective","ɵDefaultGridRowDirective_BaseFactory","DefaultGridRowDirective_Factory","gdRow","DEFAULT_VALUE","AUTO_SPECIFIER","GridRowsStyleBuilder","ɵGridRowsStyleBuilder_BaseFactory","GridRowsStyleBuilder_Factory","GridRowsDirective","rowsInlineCache","rowsCache","GridRowsDirective_Factory","DefaultGridRowsDirective","ɵDefaultGridRowsDirective_BaseFactory","DefaultGridRowsDirective_Factory","gdRows","ALL_DIRECTIVES","GridModule","GridModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["/Users/sergio/Documents/admin-nichos/administrador-nichos/node_modules/@ngbracket/ngx-layout/fesm2022/ngbracket-ngx-layout-grid.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@ngbracket/ngx-layout/core';\nimport { StyleBuilder, BaseDirective2, CoreModule } from '@ngbracket/ngx-layout/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_MAIN$1 = 'start';\nconst DEFAULT_CROSS$1 = 'stretch';\nclass GridAlignColumnsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        return buildCss$2(input || `${DEFAULT_MAIN$1} ${DEFAULT_CROSS$1}`, parent.inline);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignColumnsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignColumnsStyleBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignColumnsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAlignColumnsDirective extends BaseDirective2 {\n    get inline() {\n        return this._inline;\n    }\n    set inline(val) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-align-columns';\n        this._inline = false;\n        this.init();\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignColumnsDirective, deps: [{ token: i0.ElementRef }, { token: GridAlignColumnsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GridAlignColumnsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignColumnsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: GridAlignColumnsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }], propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst alignColumnsCache = new Map();\nconst alignColumnsInlineCache = new Map();\nconst inputs$a = [\n    'gdAlignColumns',\n    'gdAlignColumns.xs',\n    'gdAlignColumns.sm',\n    'gdAlignColumns.md',\n    'gdAlignColumns.lg',\n    'gdAlignColumns.xl',\n    'gdAlignColumns.lt-sm',\n    'gdAlignColumns.lt-md',\n    'gdAlignColumns.lt-lg',\n    'gdAlignColumns.lt-xl',\n    'gdAlignColumns.gt-xs',\n    'gdAlignColumns.gt-sm',\n    'gdAlignColumns.gt-md',\n    'gdAlignColumns.gt-lg',\n];\nconst selector$a = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\nclass DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$a;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridAlignColumnsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: DefaultGridAlignColumnsDirective, selector: \"\\n  [gdAlignColumns],\\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\\n  [gdAlignColumns.gt-lg]\\n\", inputs: { gdAlignColumns: \"gdAlignColumns\", \"gdAlignColumns.xs\": \"gdAlignColumns.xs\", \"gdAlignColumns.sm\": \"gdAlignColumns.sm\", \"gdAlignColumns.md\": \"gdAlignColumns.md\", \"gdAlignColumns.lg\": \"gdAlignColumns.lg\", \"gdAlignColumns.xl\": \"gdAlignColumns.xl\", \"gdAlignColumns.lt-sm\": \"gdAlignColumns.lt-sm\", \"gdAlignColumns.lt-md\": \"gdAlignColumns.lt-md\", \"gdAlignColumns.lt-lg\": \"gdAlignColumns.lt-lg\", \"gdAlignColumns.lt-xl\": \"gdAlignColumns.lt-xl\", \"gdAlignColumns.gt-xs\": \"gdAlignColumns.gt-xs\", \"gdAlignColumns.gt-sm\": \"gdAlignColumns.gt-sm\", \"gdAlignColumns.gt-md\": \"gdAlignColumns.gt-md\", \"gdAlignColumns.gt-lg\": \"gdAlignColumns.gt-lg\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridAlignColumnsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$a, inputs: inputs$a }]\n        }] });\nfunction buildCss$2(align, inline) {\n    const css = {}, [mainAxis, crossAxis] = align.split(' ');\n    // Main axis\n    switch (mainAxis) {\n        case 'center':\n            css['align-content'] = 'center';\n            break;\n        case 'space-around':\n            css['align-content'] = 'space-around';\n            break;\n        case 'space-between':\n            css['align-content'] = 'space-between';\n            break;\n        case 'space-evenly':\n            css['align-content'] = 'space-evenly';\n            break;\n        case 'end':\n            css['align-content'] = 'end';\n            break;\n        case 'start':\n            css['align-content'] = 'start';\n            break;\n        case 'stretch':\n            css['align-content'] = 'stretch';\n            break;\n        default: // default main axis\n            css['align-content'] = DEFAULT_MAIN$1;\n            break;\n    }\n    // Cross-axis\n    switch (crossAxis) {\n        case 'start':\n            css['align-items'] = 'start';\n            break;\n        case 'center':\n            css['align-items'] = 'center';\n            break;\n        case 'end':\n            css['align-items'] = 'end';\n            break;\n        case 'stretch':\n            css['align-items'] = 'stretch';\n            break;\n        default: // 'stretch'\n            // default cross axis\n            css['align-items'] = DEFAULT_CROSS$1;\n            break;\n    }\n    css['display'] = inline ? 'inline-grid' : 'grid';\n    return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\nclass GridAlignRowsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        return buildCss$1(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignRowsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignRowsStyleBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignRowsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAlignRowsDirective extends BaseDirective2 {\n    get inline() {\n        return this._inline;\n    }\n    set inline(val) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-align-rows';\n        this._inline = false;\n        this.init();\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignRowsDirective, deps: [{ token: i0.ElementRef }, { token: GridAlignRowsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GridAlignRowsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignRowsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: GridAlignRowsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }], propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst alignRowsCache = new Map();\nconst alignRowsInlineCache = new Map();\nconst inputs$9 = [\n    'gdAlignRows',\n    'gdAlignRows.xs',\n    'gdAlignRows.sm',\n    'gdAlignRows.md',\n    'gdAlignRows.lg',\n    'gdAlignRows.xl',\n    'gdAlignRows.lt-sm',\n    'gdAlignRows.lt-md',\n    'gdAlignRows.lt-lg',\n    'gdAlignRows.lt-xl',\n    'gdAlignRows.gt-xs',\n    'gdAlignRows.gt-sm',\n    'gdAlignRows.gt-md',\n    'gdAlignRows.gt-lg',\n];\nconst selector$9 = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\nclass DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$9;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridAlignRowsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: DefaultGridAlignRowsDirective, selector: \"\\n  [gdAlignRows],\\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\\n  [gdAlignRows.gt-lg]\\n\", inputs: { gdAlignRows: \"gdAlignRows\", \"gdAlignRows.xs\": \"gdAlignRows.xs\", \"gdAlignRows.sm\": \"gdAlignRows.sm\", \"gdAlignRows.md\": \"gdAlignRows.md\", \"gdAlignRows.lg\": \"gdAlignRows.lg\", \"gdAlignRows.xl\": \"gdAlignRows.xl\", \"gdAlignRows.lt-sm\": \"gdAlignRows.lt-sm\", \"gdAlignRows.lt-md\": \"gdAlignRows.lt-md\", \"gdAlignRows.lt-lg\": \"gdAlignRows.lt-lg\", \"gdAlignRows.lt-xl\": \"gdAlignRows.lt-xl\", \"gdAlignRows.gt-xs\": \"gdAlignRows.gt-xs\", \"gdAlignRows.gt-sm\": \"gdAlignRows.gt-sm\", \"gdAlignRows.gt-md\": \"gdAlignRows.gt-md\", \"gdAlignRows.gt-lg\": \"gdAlignRows.gt-lg\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridAlignRowsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$9, inputs: inputs$9 }]\n        }] });\nfunction buildCss$1(align, inline) {\n    const css = {}, [mainAxis, crossAxis] = align.split(' ');\n    // Main axis\n    switch (mainAxis) {\n        case 'center':\n        case 'space-around':\n        case 'space-between':\n        case 'space-evenly':\n        case 'end':\n        case 'start':\n        case 'stretch':\n            css['justify-content'] = mainAxis;\n            break;\n        default: // default main axis\n            css['justify-content'] = DEFAULT_MAIN;\n            break;\n    }\n    // Cross-axis\n    switch (crossAxis) {\n        case 'start':\n        case 'center':\n        case 'end':\n        case 'stretch':\n            css['justify-items'] = crossAxis;\n            break;\n        default: // 'stretch'\n            // default cross axis\n            css['justify-items'] = DEFAULT_CROSS;\n            break;\n    }\n    css['display'] = inline ? 'inline-grid' : 'grid';\n    return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$7 = 'auto';\nclass GridAreaStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return { 'grid-area': input || DEFAULT_VALUE$7 };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAreaStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAreaStyleBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAreaStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAreaDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'grid-area';\n        this.styleCache = gridAreaCache;\n        this.init();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAreaDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: GridAreaStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GridAreaDirective, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAreaDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: GridAreaStyleBuilder }, { type: i1.MediaMarshaller }] });\nconst gridAreaCache = new Map();\nconst inputs$8 = [\n    'gdArea',\n    'gdArea.xs',\n    'gdArea.sm',\n    'gdArea.md',\n    'gdArea.lg',\n    'gdArea.xl',\n    'gdArea.lt-sm',\n    'gdArea.lt-md',\n    'gdArea.lt-lg',\n    'gdArea.lt-xl',\n    'gdArea.gt-xs',\n    'gdArea.gt-sm',\n    'gdArea.gt-md',\n    'gdArea.gt-lg',\n];\nconst selector$8 = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\nclass DefaultGridAreaDirective extends GridAreaDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$8;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridAreaDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: DefaultGridAreaDirective, selector: \"\\n  [gdArea],\\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\\n\", inputs: { gdArea: \"gdArea\", \"gdArea.xs\": \"gdArea.xs\", \"gdArea.sm\": \"gdArea.sm\", \"gdArea.md\": \"gdArea.md\", \"gdArea.lg\": \"gdArea.lg\", \"gdArea.xl\": \"gdArea.xl\", \"gdArea.lt-sm\": \"gdArea.lt-sm\", \"gdArea.lt-md\": \"gdArea.lt-md\", \"gdArea.lt-lg\": \"gdArea.lt-lg\", \"gdArea.lt-xl\": \"gdArea.lt-xl\", \"gdArea.gt-xs\": \"gdArea.gt-xs\", \"gdArea.gt-sm\": \"gdArea.gt-sm\", \"gdArea.gt-md\": \"gdArea.gt-md\", \"gdArea.gt-lg\": \"gdArea.gt-lg\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridAreaDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$8, inputs: inputs$8 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$6 = 'none';\nconst DELIMETER = '|';\nclass GridAreasStyleBuiler extends StyleBuilder {\n    buildStyles(input, parent) {\n        const areas = (input || DEFAULT_VALUE$6)\n            .split(DELIMETER)\n            .map((v) => `\"${v.trim()}\"`);\n        return {\n            display: parent.inline ? 'inline-grid' : 'grid',\n            'grid-template-areas': areas.join(' '),\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAreasStyleBuiler, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAreasStyleBuiler, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAreasStyleBuiler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAreasDirective extends BaseDirective2 {\n    get inline() {\n        return this._inline;\n    }\n    set inline(val) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'grid-areas';\n        this._inline = false;\n        this.init();\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? areasInlineCache : areasCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAreasDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: GridAreasStyleBuiler }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GridAreasDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAreasDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: GridAreasStyleBuiler }, { type: i1.MediaMarshaller }], propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst areasCache = new Map();\nconst areasInlineCache = new Map();\nconst inputs$7 = [\n    'gdAreas',\n    'gdAreas.xs',\n    'gdAreas.sm',\n    'gdAreas.md',\n    'gdAreas.lg',\n    'gdAreas.xl',\n    'gdAreas.lt-sm',\n    'gdAreas.lt-md',\n    'gdAreas.lt-lg',\n    'gdAreas.lt-xl',\n    'gdAreas.gt-xs',\n    'gdAreas.gt-sm',\n    'gdAreas.gt-md',\n    'gdAreas.gt-lg',\n];\nconst selector$7 = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\nclass DefaultGridAreasDirective extends GridAreasDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$7;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridAreasDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: DefaultGridAreasDirective, selector: \"\\n  [gdAreas],\\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\\n\", inputs: { gdAreas: \"gdAreas\", \"gdAreas.xs\": \"gdAreas.xs\", \"gdAreas.sm\": \"gdAreas.sm\", \"gdAreas.md\": \"gdAreas.md\", \"gdAreas.lg\": \"gdAreas.lg\", \"gdAreas.xl\": \"gdAreas.xl\", \"gdAreas.lt-sm\": \"gdAreas.lt-sm\", \"gdAreas.lt-md\": \"gdAreas.lt-md\", \"gdAreas.lt-lg\": \"gdAreas.lt-lg\", \"gdAreas.lt-xl\": \"gdAreas.lt-xl\", \"gdAreas.gt-xs\": \"gdAreas.gt-xs\", \"gdAreas.gt-sm\": \"gdAreas.gt-sm\", \"gdAreas.gt-md\": \"gdAreas.gt-md\", \"gdAreas.gt-lg\": \"gdAreas.gt-lg\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridAreasDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$7, inputs: inputs$7 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$5 = 'initial';\nclass GridAutoStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        let [direction, dense] = (input || DEFAULT_VALUE$5).split(' ');\n        if (direction !== 'column' &&\n            direction !== 'row' &&\n            direction !== 'dense') {\n            direction = 'row';\n        }\n        dense = dense === 'dense' && direction !== 'dense' ? ' dense' : '';\n        return {\n            display: parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-flow': direction + dense,\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAutoStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAutoStyleBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAutoStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAutoDirective extends BaseDirective2 {\n    get inline() {\n        return this._inline;\n    }\n    set inline(val) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this._inline = false;\n        this.DIRECTIVE_KEY = 'grid-auto';\n        this.init();\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? autoInlineCache : autoCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAutoDirective, deps: [{ token: i0.ElementRef }, { token: GridAutoStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GridAutoDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAutoDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: GridAutoStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }], propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst autoCache = new Map();\nconst autoInlineCache = new Map();\nconst inputs$6 = [\n    'gdAuto',\n    'gdAuto.xs',\n    'gdAuto.sm',\n    'gdAuto.md',\n    'gdAuto.lg',\n    'gdAuto.xl',\n    'gdAuto.lt-sm',\n    'gdAuto.lt-md',\n    'gdAuto.lt-lg',\n    'gdAuto.lt-xl',\n    'gdAuto.gt-xs',\n    'gdAuto.gt-sm',\n    'gdAuto.gt-md',\n    'gdAuto.gt-lg',\n];\nconst selector$6 = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\nclass DefaultGridAutoDirective extends GridAutoDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$6;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridAutoDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: DefaultGridAutoDirective, selector: \"\\n  [gdAuto],\\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\\n\", inputs: { gdAuto: \"gdAuto\", \"gdAuto.xs\": \"gdAuto.xs\", \"gdAuto.sm\": \"gdAuto.sm\", \"gdAuto.md\": \"gdAuto.md\", \"gdAuto.lg\": \"gdAuto.lg\", \"gdAuto.xl\": \"gdAuto.xl\", \"gdAuto.lt-sm\": \"gdAuto.lt-sm\", \"gdAuto.lt-md\": \"gdAuto.lt-md\", \"gdAuto.lt-lg\": \"gdAuto.lt-lg\", \"gdAuto.lt-xl\": \"gdAuto.lt-xl\", \"gdAuto.gt-xs\": \"gdAuto.gt-xs\", \"gdAuto.gt-sm\": \"gdAuto.gt-sm\", \"gdAuto.gt-md\": \"gdAuto.gt-md\", \"gdAuto.gt-lg\": \"gdAuto.gt-lg\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridAutoDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$6, inputs: inputs$6 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$4 = 'auto';\nclass GridColumnStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return { 'grid-column': input || DEFAULT_VALUE$4 };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridColumnStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridColumnStyleBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridColumnStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridColumnDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-column';\n        this.styleCache = columnCache;\n        this.init();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridColumnDirective, deps: [{ token: i0.ElementRef }, { token: GridColumnStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GridColumnDirective, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridColumnDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: GridColumnStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }] });\nconst columnCache = new Map();\nconst inputs$5 = [\n    'gdColumn',\n    'gdColumn.xs',\n    'gdColumn.sm',\n    'gdColumn.md',\n    'gdColumn.lg',\n    'gdColumn.xl',\n    'gdColumn.lt-sm',\n    'gdColumn.lt-md',\n    'gdColumn.lt-lg',\n    'gdColumn.lt-xl',\n    'gdColumn.gt-xs',\n    'gdColumn.gt-sm',\n    'gdColumn.gt-md',\n    'gdColumn.gt-lg',\n];\nconst selector$5 = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\nclass DefaultGridColumnDirective extends GridColumnDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$5;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridColumnDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: DefaultGridColumnDirective, selector: \"\\n  [gdColumn],\\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\\n\", inputs: { gdColumn: \"gdColumn\", \"gdColumn.xs\": \"gdColumn.xs\", \"gdColumn.sm\": \"gdColumn.sm\", \"gdColumn.md\": \"gdColumn.md\", \"gdColumn.lg\": \"gdColumn.lg\", \"gdColumn.xl\": \"gdColumn.xl\", \"gdColumn.lt-sm\": \"gdColumn.lt-sm\", \"gdColumn.lt-md\": \"gdColumn.lt-md\", \"gdColumn.lt-lg\": \"gdColumn.lt-lg\", \"gdColumn.lt-xl\": \"gdColumn.lt-xl\", \"gdColumn.gt-xs\": \"gdColumn.gt-xs\", \"gdColumn.gt-sm\": \"gdColumn.gt-sm\", \"gdColumn.gt-md\": \"gdColumn.gt-md\", \"gdColumn.gt-lg\": \"gdColumn.gt-lg\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridColumnDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$5, inputs: inputs$5 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$3 = 'none';\nconst AUTO_SPECIFIER$1 = '!';\nclass GridColumnsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        input = input || DEFAULT_VALUE$3;\n        let auto = false;\n        if (input.endsWith(AUTO_SPECIFIER$1)) {\n            input = input.substring(0, input.indexOf(AUTO_SPECIFIER$1));\n            auto = true;\n        }\n        const css = {\n            display: parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-columns': '',\n            'grid-template-columns': '',\n        };\n        const key = auto ? 'grid-auto-columns' : 'grid-template-columns';\n        css[key] = input;\n        return css;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridColumnsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridColumnsStyleBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridColumnsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridColumnsDirective extends BaseDirective2 {\n    get inline() {\n        return this._inline;\n    }\n    set inline(val) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-columns';\n        this._inline = false;\n        this.init();\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridColumnsDirective, deps: [{ token: i0.ElementRef }, { token: GridColumnsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GridColumnsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridColumnsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: GridColumnsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }], propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst columnsCache = new Map();\nconst columnsInlineCache = new Map();\nconst inputs$4 = [\n    'gdColumns',\n    'gdColumns.xs',\n    'gdColumns.sm',\n    'gdColumns.md',\n    'gdColumns.lg',\n    'gdColumns.xl',\n    'gdColumns.lt-sm',\n    'gdColumns.lt-md',\n    'gdColumns.lt-lg',\n    'gdColumns.lt-xl',\n    'gdColumns.gt-xs',\n    'gdColumns.gt-sm',\n    'gdColumns.gt-md',\n    'gdColumns.gt-lg',\n];\nconst selector$4 = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\nclass DefaultGridColumnsDirective extends GridColumnsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$4;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridColumnsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: DefaultGridColumnsDirective, selector: \"\\n  [gdColumns],\\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\\n\", inputs: { gdColumns: \"gdColumns\", \"gdColumns.xs\": \"gdColumns.xs\", \"gdColumns.sm\": \"gdColumns.sm\", \"gdColumns.md\": \"gdColumns.md\", \"gdColumns.lg\": \"gdColumns.lg\", \"gdColumns.xl\": \"gdColumns.xl\", \"gdColumns.lt-sm\": \"gdColumns.lt-sm\", \"gdColumns.lt-md\": \"gdColumns.lt-md\", \"gdColumns.lt-lg\": \"gdColumns.lt-lg\", \"gdColumns.lt-xl\": \"gdColumns.lt-xl\", \"gdColumns.gt-xs\": \"gdColumns.gt-xs\", \"gdColumns.gt-sm\": \"gdColumns.gt-sm\", \"gdColumns.gt-md\": \"gdColumns.gt-md\", \"gdColumns.gt-lg\": \"gdColumns.gt-lg\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridColumnsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$4, inputs: inputs$4 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$2 = '0';\nclass GridGapStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        return {\n            display: parent.inline ? 'inline-grid' : 'grid',\n            'grid-gap': input || DEFAULT_VALUE$2,\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridGapStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridGapStyleBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridGapStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridGapDirective extends BaseDirective2 {\n    get inline() {\n        return this._inline;\n    }\n    set inline(val) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'grid-gap';\n        this._inline = false;\n        this.init();\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? gapInlineCache : gapCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridGapDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: GridGapStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GridGapDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridGapDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: GridGapStyleBuilder }, { type: i1.MediaMarshaller }], propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst gapCache = new Map();\nconst gapInlineCache = new Map();\nconst inputs$3 = [\n    'gdGap',\n    'gdGap.xs',\n    'gdGap.sm',\n    'gdGap.md',\n    'gdGap.lg',\n    'gdGap.xl',\n    'gdGap.lt-sm',\n    'gdGap.lt-md',\n    'gdGap.lt-lg',\n    'gdGap.lt-xl',\n    'gdGap.gt-xs',\n    'gdGap.gt-sm',\n    'gdGap.gt-md',\n    'gdGap.gt-lg',\n];\nconst selector$3 = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\nclass DefaultGridGapDirective extends GridGapDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$3;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridGapDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: DefaultGridGapDirective, selector: \"\\n  [gdGap],\\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\\n\", inputs: { gdGap: \"gdGap\", \"gdGap.xs\": \"gdGap.xs\", \"gdGap.sm\": \"gdGap.sm\", \"gdGap.md\": \"gdGap.md\", \"gdGap.lg\": \"gdGap.lg\", \"gdGap.xl\": \"gdGap.xl\", \"gdGap.lt-sm\": \"gdGap.lt-sm\", \"gdGap.lt-md\": \"gdGap.lt-md\", \"gdGap.lt-lg\": \"gdGap.lt-lg\", \"gdGap.lt-xl\": \"gdGap.lt-xl\", \"gdGap.gt-xs\": \"gdGap.gt-xs\", \"gdGap.gt-sm\": \"gdGap.gt-sm\", \"gdGap.gt-md\": \"gdGap.gt-md\", \"gdGap.gt-lg\": \"gdGap.gt-lg\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridGapDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$3, inputs: inputs$3 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\nclass GridAlignStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return buildCss(input || ROW_DEFAULT);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignStyleBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAlignDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-align';\n        this.styleCache = alignCache;\n        this.init();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignDirective, deps: [{ token: i0.ElementRef }, { token: GridAlignStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GridAlignDirective, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridAlignDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: GridAlignStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }] });\nconst alignCache = new Map();\nconst inputs$2 = [\n    'gdGridAlign',\n    'gdGridAlign.xs',\n    'gdGridAlign.sm',\n    'gdGridAlign.md',\n    'gdGridAlign.lg',\n    'gdGridAlign.xl',\n    'gdGridAlign.lt-sm',\n    'gdGridAlign.lt-md',\n    'gdGridAlign.lt-lg',\n    'gdGridAlign.lt-xl',\n    'gdGridAlign.gt-xs',\n    'gdGridAlign.gt-sm',\n    'gdGridAlign.gt-md',\n    'gdGridAlign.gt-lg',\n];\nconst selector$2 = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\nclass DefaultGridAlignDirective extends GridAlignDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$2;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridAlignDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: DefaultGridAlignDirective, selector: \"\\n  [gdGridAlign],\\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\\n\", inputs: { gdGridAlign: \"gdGridAlign\", \"gdGridAlign.xs\": \"gdGridAlign.xs\", \"gdGridAlign.sm\": \"gdGridAlign.sm\", \"gdGridAlign.md\": \"gdGridAlign.md\", \"gdGridAlign.lg\": \"gdGridAlign.lg\", \"gdGridAlign.xl\": \"gdGridAlign.xl\", \"gdGridAlign.lt-sm\": \"gdGridAlign.lt-sm\", \"gdGridAlign.lt-md\": \"gdGridAlign.lt-md\", \"gdGridAlign.lt-lg\": \"gdGridAlign.lt-lg\", \"gdGridAlign.lt-xl\": \"gdGridAlign.lt-xl\", \"gdGridAlign.gt-xs\": \"gdGridAlign.gt-xs\", \"gdGridAlign.gt-sm\": \"gdGridAlign.gt-sm\", \"gdGridAlign.gt-md\": \"gdGridAlign.gt-md\", \"gdGridAlign.gt-lg\": \"gdGridAlign.gt-lg\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridAlignDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$2, inputs: inputs$2 }]\n        }] });\nfunction buildCss(align = '') {\n    const css = {}, [rowAxis, columnAxis] = align.split(' ');\n    // Row axis\n    switch (rowAxis) {\n        case 'end':\n            css['justify-self'] = 'end';\n            break;\n        case 'center':\n            css['justify-self'] = 'center';\n            break;\n        case 'stretch':\n            css['justify-self'] = 'stretch';\n            break;\n        case 'start':\n            css['justify-self'] = 'start';\n            break;\n        default: // default row axis\n            css['justify-self'] = ROW_DEFAULT;\n            break;\n    }\n    // Column axis\n    switch (columnAxis) {\n        case 'end':\n            css['align-self'] = 'end';\n            break;\n        case 'center':\n            css['align-self'] = 'center';\n            break;\n        case 'stretch':\n            css['align-self'] = 'stretch';\n            break;\n        case 'start':\n            css['align-self'] = 'start';\n            break;\n        default: // default column axis\n            css['align-self'] = COL_DEFAULT;\n            break;\n    }\n    return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$1 = 'auto';\nclass GridRowStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return { 'grid-row': input || DEFAULT_VALUE$1 };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridRowStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridRowStyleBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridRowStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridRowDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-row';\n        this.styleCache = rowCache;\n        this.init();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridRowDirective, deps: [{ token: i0.ElementRef }, { token: GridRowStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GridRowDirective, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridRowDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: GridRowStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }] });\nconst rowCache = new Map();\nconst inputs$1 = [\n    'gdRow',\n    'gdRow.xs',\n    'gdRow.sm',\n    'gdRow.md',\n    'gdRow.lg',\n    'gdRow.xl',\n    'gdRow.lt-sm',\n    'gdRow.lt-md',\n    'gdRow.lt-lg',\n    'gdRow.lt-xl',\n    'gdRow.gt-xs',\n    'gdRow.gt-sm',\n    'gdRow.gt-md',\n    'gdRow.gt-lg',\n];\nconst selector$1 = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\nclass DefaultGridRowDirective extends GridRowDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$1;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridRowDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: DefaultGridRowDirective, selector: \"\\n  [gdRow],\\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\\n\", inputs: { gdRow: \"gdRow\", \"gdRow.xs\": \"gdRow.xs\", \"gdRow.sm\": \"gdRow.sm\", \"gdRow.md\": \"gdRow.md\", \"gdRow.lg\": \"gdRow.lg\", \"gdRow.xl\": \"gdRow.xl\", \"gdRow.lt-sm\": \"gdRow.lt-sm\", \"gdRow.lt-md\": \"gdRow.lt-md\", \"gdRow.lt-lg\": \"gdRow.lt-lg\", \"gdRow.lt-xl\": \"gdRow.lt-xl\", \"gdRow.gt-xs\": \"gdRow.gt-xs\", \"gdRow.gt-sm\": \"gdRow.gt-sm\", \"gdRow.gt-md\": \"gdRow.gt-md\", \"gdRow.gt-lg\": \"gdRow.gt-lg\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridRowDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$1, inputs: inputs$1 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\nclass GridRowsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        input = input || DEFAULT_VALUE;\n        let auto = false;\n        if (input.endsWith(AUTO_SPECIFIER)) {\n            input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n            auto = true;\n        }\n        const css = {\n            display: parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-rows': '',\n            'grid-template-rows': '',\n        };\n        const key = auto ? 'grid-auto-rows' : 'grid-template-rows';\n        css[key] = input;\n        return css;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridRowsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridRowsStyleBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridRowsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridRowsDirective extends BaseDirective2 {\n    get inline() {\n        return this._inline;\n    }\n    set inline(val) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-rows';\n        this._inline = false;\n        this.init();\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridRowsDirective, deps: [{ token: i0.ElementRef }, { token: GridRowsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: GridRowsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridRowsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: GridRowsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }], propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst rowsCache = new Map();\nconst rowsInlineCache = new Map();\nconst inputs = [\n    'gdRows',\n    'gdRows.xs',\n    'gdRows.sm',\n    'gdRows.md',\n    'gdRows.lg',\n    'gdRows.xl',\n    'gdRows.lt-sm',\n    'gdRows.lt-md',\n    'gdRows.lt-lg',\n    'gdRows.lt-xl',\n    'gdRows.gt-xs',\n    'gdRows.gt-sm',\n    'gdRows.gt-md',\n    'gdRows.gt-lg',\n];\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\nclass DefaultGridRowsDirective extends GridRowsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridRowsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.9\", type: DefaultGridRowsDirective, selector: \"\\n  [gdRows],\\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\\n\", inputs: { gdRows: \"gdRows\", \"gdRows.xs\": \"gdRows.xs\", \"gdRows.sm\": \"gdRows.sm\", \"gdRows.md\": \"gdRows.md\", \"gdRows.lg\": \"gdRows.lg\", \"gdRows.xl\": \"gdRows.xl\", \"gdRows.lt-sm\": \"gdRows.lt-sm\", \"gdRows.lt-md\": \"gdRows.lt-md\", \"gdRows.lt-lg\": \"gdRows.lt-lg\", \"gdRows.lt-xl\": \"gdRows.lt-xl\", \"gdRows.gt-xs\": \"gdRows.gt-xs\", \"gdRows.gt-sm\": \"gdRows.gt-sm\", \"gdRows.gt-md\": \"gdRows.gt-md\", \"gdRows.gt-lg\": \"gdRows.gt-lg\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: DefaultGridRowsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector, inputs }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [\n    DefaultGridAlignDirective,\n    DefaultGridAlignColumnsDirective,\n    DefaultGridAlignRowsDirective,\n    DefaultGridAreaDirective,\n    DefaultGridAreasDirective,\n    DefaultGridAutoDirective,\n    DefaultGridColumnDirective,\n    DefaultGridColumnsDirective,\n    DefaultGridGapDirective,\n    DefaultGridRowDirective,\n    DefaultGridRowsDirective,\n];\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\nclass GridModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.9\", ngImport: i0, type: GridModule, declarations: [DefaultGridAlignDirective,\n            DefaultGridAlignColumnsDirective,\n            DefaultGridAlignRowsDirective,\n            DefaultGridAreaDirective,\n            DefaultGridAreasDirective,\n            DefaultGridAutoDirective,\n            DefaultGridColumnDirective,\n            DefaultGridColumnsDirective,\n            DefaultGridGapDirective,\n            DefaultGridRowDirective,\n            DefaultGridRowsDirective], imports: [CoreModule], exports: [DefaultGridAlignDirective,\n            DefaultGridAlignColumnsDirective,\n            DefaultGridAlignRowsDirective,\n            DefaultGridAreaDirective,\n            DefaultGridAreasDirective,\n            DefaultGridAutoDirective,\n            DefaultGridColumnDirective,\n            DefaultGridColumnsDirective,\n            DefaultGridGapDirective,\n            DefaultGridRowDirective,\n            DefaultGridRowsDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridModule, imports: [CoreModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.9\", ngImport: i0, type: GridModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule],\n                    declarations: [...ALL_DIRECTIVES],\n                    exports: [...ALL_DIRECTIVES],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DefaultGridAlignColumnsDirective, DefaultGridAlignDirective, DefaultGridAlignRowsDirective, DefaultGridAreaDirective, DefaultGridAreasDirective, DefaultGridAutoDirective, DefaultGridColumnDirective, DefaultGridColumnsDirective, DefaultGridGapDirective, DefaultGridRowDirective, DefaultGridRowsDirective, GridAlignColumnsDirective, GridAlignColumnsStyleBuilder, GridAlignDirective, GridAlignRowsDirective, GridAlignRowsStyleBuilder, GridAlignStyleBuilder, GridAreaDirective, GridAreaStyleBuilder, GridAreasDirective, GridAreasStyleBuiler, GridAutoDirective, GridAutoStyleBuilder, GridColumnDirective, GridColumnStyleBuilder, GridColumnsDirective, GridColumnsStyleBuilder, GridGapDirective, GridGapStyleBuilder, GridModule, GridRowDirective, GridRowStyleBuilder, GridRowsDirective, GridRowsStyleBuilder };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}